type: layout-form
id: root
header:
  - type: header
    title: ESP Installer
    logo: espressif.svg
form:
  - type: fieldset
    id: main_fieldset
    platform: win32
    subitems:
      - type: row
        id: row_1
        subitems:
          - type: combo
            id: sdk_type
            name: Select SDK
            items:
              - ESP-IDF
              - Rust
              - Zephyr
              - TinyGo
              - MicroPython
              - NuttX
              - DeviceScript
              - .NET nanoFramework
  - type: fieldset
    id: main_fieldset
    platform:
      - linux
      - darwin
    subitems:
      - type: row
        id: row_1
        subitems:
          - type: combo
            id: sdk_type
            name: Select SDK
            items:
              - not supported
  - type: fieldset
    id: fieldset_esp_idf
    subitems:
      - type: row
        id: row_custom_esp_idf
        subitems:
          - type: combo
            id: esp_idf_version
            name: Select ESP-IDF Version
            items:
              - v5.3-beta1
              - v5.2.2
              - v5.1.4
              - v5.2.1
            variable: version
      - type: 'action-row'
        platform: win32
        id: idf-install-scoop
        action-name: Install Scoop
        check: scoop --version
        install: iwr -useb get.scoop.sh | iex
      - type: 'action-row'
        id: idf-install-python
        action-name: Install Python
        check: python --version
        install: scoop install python
      - type: 'action-row'
        id: idf-install-git
        action-name: Install Git
        check: git --version
        install: scoop install git
      - type: 'action-row'
        id: idf-install-cmake
        action-name: Install CMake
        check: cmake --version
        install: scoop install cmake
      - type: 'action-row'
        id: idf-install-ninja
        action-name: Install Ninja
        check: ninja --version
        install: scoop install ninja
      - type: 'action-row'
        id: idf-install-openocd
        action-name: Install OpenOCD
        check: openocd --version
        install: scoop install openocd
      - type: 'action-row'
        id: idf-install-sdk
        action-name: Install ESP-IDF
        check: if (Test-path ~/esp-idf-${version} -PathType container) { exit 0 } else { exit 1}
        install: |
            if (-not (Test-path ~/esp-idf-${version}.zip -PathType leaf)) { wget https://dl.espressif.com/github_assets/espressif/esp-idf/releases/download/${version}/esp-idf-${version}.zip -O ./esp-idf-${version}.zip }
            unzip esp-idf-${version}.zip
      - type: 'action-row'
        id: idf-install-tools
        action-name: Install ESP-IDF Tools
        check: if (Test-path ~/esp-idf-${version} -PathType container) { exit 0 } else { exit 1}
        install: |
            cd ~/esp-idf-${version}
            ./install.bat
            ./export.bat
  - type: fieldset
    id: fieldset_tinygo
    subitems:
      - type: 'action-row'
        id: install-scoop
        action-name: Install Scoop
        check: scoop --version
        install: iwr -useb get.scoop.sh | iex
      - type: 'action-row'
        id: install-go
        action-name: Install Go
        check: go version
        install: scoop install go
      - type: 'action-row'
        id: install-tinygo
        action-name: Install TinyGo
        check: tinygo version
        install: scoop install tinygo
      - type: 'action-row'
        id: tinygo-install-python
        action-name: Install Python
        check: python --version
        install: scoop install python
      - type: 'action-row'
        id: tinygo-install-esptool
        action-name: Install esptool.py
        check: esptool -h
        install: pip install esptool


  - type: fieldset
    id: fieldset_rust
    subitems:
      - type: 'action-row'
        id: install-scoop-rust
        action-name: Install Scoop
        check: scoop --version
        install: iwr -useb get.scoop.sh | iex
      - type: 'action-row'
        id: install-rustup
        action-name: Install Rust Up
        check: rustup --version
        install: scoop install rustup-gnu

      - type: 'action-row'
        id: install-espup
        action-name: Install espup (Xtensa targets only)
        check: espup --version
        install: cargo install espup

      - type: 'action-row'
        id: rust-install-espflash
        action-name: Install espflash
        check: espflash --version
        install: cargo install espflash

      - type: 'action-row'
        id: run-espup
        action-name: Run espup
        check: if (Test-Path -Path '~/export-esp.ps1')  { exit 0 } else { exit 1 }
        install: espup install

      - type: 'action-row'
        id: install-toolchain
        action-name: Install Rust Toolchain
        check: $out = rustup show; if ($out -like '*x86_64-pc-windows-gnu*') { exit 0 } else { exit 1 }
        install: rustup toolchain install nightly --component rust-src

      - type: 'action-row'
        id: install-target-c2-c3
        action-name: Add taget baremetal (ESP32-C2, ESP32-C3)
        check: $out = rustup show; if ($out -like '*riscv32imc-unknown-none-elf*') { exit 0 } else { exit 1 }
        install: rustup target add riscv32imc-unknown-none-elf

      - type: 'action-row'
        id: install-target-c6-
        action-name: Add taget baremetal (ESP32-C2, ESP32-C3)
        check: $out = rustup show; if ($out -like '*riscv32imac-unknown-none-elf*') { exit 0 } else { exit 1 }
        install: rustup target add riscv32imac-unknown-none-elf

  - type: fieldset
    id: fieldset_zephyr
    subitems:
      - type: 'action-row'
        id: zephyr-install-python
        action-name: Install Python
        check: python --version
        install: winget install python
      - type: 'action-row'
        id: zephyr-install-venv
        action-name: Create Virtual Environment
        check: if (Test-path ~/zephyrproject/.venv/Scripts/activate.bat -PathType leaf) { exit 0 } else { exit 1 }
        install: |
            cd ~
            python -m venv zephyrproject\.venv

      - type: 'action-row'
        id: zephyr-install-west
        action-name: Install west
        check: ~/zephyrproject/.venv/Scripts/activate.ps1; west --version
        install: |
            ~/zephyrproject/.venv/Scripts/activate.ps1
            pip install west

      - type: 'action-row'
        id: zephyr-get-source
        action-name: Get Zephyr Source
        check: if (Test-path ~/zephyrproject/.venv/Scripts/mooo -PathType leaf) { exit 0 } else { exit 1 }
        install: |
            cd ~
            ./zephyrproject/.venv/Scripts/activate.ps1
            west init zephyrproject
            cd zephyrproject
            west update
            west zephyr-export
            pip install -r ./zephyr/scripts/requirements.txt
            west blobs fetch hal_espressif
        # maybe last command should be separated
      - type: 'action-row'
        id: zephyr-download-sdk
        action-name: Download Zephyr SDK
        check: if (Test-path ~/zephyr-sdk-0.16.3_windows-x86_64.7z -PathType leaf) { exit 0 } else { exit 1 }
        install: |
            if (-not (Test-path ~/zephyr-sdk-0.16.3_windows-x86_64.7z -PathType leaf)) { wget https://github.com/zephyrproject-rtos/sdk-ng/releases/download/v0.16.3/zephyr-sdk-0.16.3_windows-x86_64.7z -O ~/zephyr-sdk-0.16.3_windows-x86_64.7z }
            7z x ~/zephyr-sdk-0.16.3_windows-x86_64.7z
            ~/zephyr-sdk-0.16.3/setup.cmd
        # !!! make setup.cmd non-interactive !!!
        # ESP-IDF targets are more complex
      - type: 'action-row'
        id: zephyr-build-hello-world
        action-name: Build Hello World Example
        check: if (Test-path ~/zephyrproject/zephyr/build/zephyr/zephyr.elf -PathType leaf) { exit 0 } else { exit 1 }
        install: |
            cd ~
            ./zephyrproject/.venv/Scripts/activate.ps1
            cd ~/zephyrproject/zephyr
            west build -p auto -b esp32 samples/hello_world/
footer:
  - type: footer
    id: footer
    subitems:
      - type: button
        id: install_button
        text: Install
